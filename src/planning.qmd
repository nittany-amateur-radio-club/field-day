---
title: "Planning"
format:
  html:
    code-fold: false
    code-tools: true
    toc: true
params:
  update_data: true
  survey_data_fn: narc-fd-2024-survey.csv
  survey_sheet_fn: "Field Day 2024 volunteer sign-up (Responses)"
---

## About

This page documents some of the steps in our planning process.

## Member Survey

W3TM drafted a member survey using a Google Form.

Here are some of the preliminary results.

### Set-up

We source some packages to make calls to their functions more convenient.

```{r}
library(ggplot2)
```

### Gathering

The Google Form application saves the survey responses as a Google Sheet:

https://docs.google.com/spreadsheets/d/1Rr2kPK16v0tG-c8dm03gl3jqBNqB_DGyQtVcCVmFadg/edit?resourcekey#gid=283208367

```{r}
if (!dir.exists('csv')) {
  message("Creating missing `csv/`.")
  dir.create("csv")
}

update_figs = TRUE

full_survey_data_fn <- file.path("csv", params$survey_data_fn)

if (params$update_data) {
  options(gargle_oauth_email = Sys.getenv("GMAIL_SURVEY"))
  googledrive::drive_auth()
  
  new_fn <- file.path("csv", paste0("_", params$survey_data_fn))
  googledrive::drive_download(
    params$survey_sheet_fn,
    path = full_survey_data_fn,
    type = "csv",
    overwrite = TRUE
  )
  message("Data updated.")
} else {
  if (!file.exists(full_survey_data_fn)) {
    warning("File not found: '", full_survey_data_fn, "'.")
    update_figs = FALSE
  } else {
    message("Using previously stored data.")
  }
}
```

Now, we load the downloaded CSV

```{r load-survey-data}
if (update_figs) {
  survey_resps <-
    readr::read_csv(full_survey_data_fn, show_col_types = FALSE)
}

names(survey_resps)
```

### Cleaning

Then we clean the data by renaming the variables.

```{r rename-variables}
survey_resps <- survey_resps |>
  dplyr::rename(
    timestamp = "Timestamp",
    name = "Your Name",
    callsign = "Callsign",
    phone = "Phone",
    email = "Email",
    attend = "Do you plan to attend NARC's Field Day 2024?",
    operate = "Do you plan to operate on Field Day?",
    overnight = "Are you a night owl and want to operate late into the night or camp out to snag some rare DX?",
help_with = "I'm interested in helping with the following activities to promote Field Day and amateur radio to the public...",
comments = "Comments or suggestions"
  )

names(survey_resps)[9] <- "modes"
```

Then we parse variables with multiple values, and conforming some values so that they are easier to visualize.

```{r recode-variables}
survey_resps <- survey_resps |>
  # Change timestamp to proper date and time
  dplyr::mutate(timestamp = lubridate::mdy_hms(timestamp, tz = "America/New_York")) |>
  # Change values for 'attend' to make them more easily readable
  dplyr::mutate(
    attend = dplyr::recode(
      attend,
      'Yes, on Saturday June 22' = "sat",
      'Yes, on Sunday June 23' = "sun",
      'Yes, on Saturday June 22, Yes, on Sunday June 23' = "sat_sun",
      'Not this year' = "no"
    )
  ) |>
  # Change values for 'operate' to make them lower case
  dplyr::mutate(operate = tolower(operate)) |>
  # Change values for 'overnight'
  dplyr::mutate(
    overnight = dplyr::recode(overnight,
                              'Yes, absolutely' = "yes",
                              'Heck no' = "no")
  ) |>
  # Create new variable for each mode
  dplyr::mutate(phone = stringr::str_detect(modes, "Phone"),
                cw = stringr::str_detect(modes, "CW"),
                ft8 = stringr::str_detect(modes, "FT8/FT4"),
                varac = stringr::str_detect(modes, "VarAC"),
                fldigi = stringr::str_detect(modes, "fldigi"),
                js8call = stringr::str_detect(modes, "JS8Call"),
                sstv = stringr::str_detect(modes, "SSTV")) |>
  # Create new variables for each volunteer role
  dplyr::mutate(pr = stringr::str_detect(help_with, "PR"),
                info_table = stringr::str_detect(help_with, "table"),
                satellite = stringr::str_detect(help_with, "satellite"),
                mode_expert = stringr::str_detect(help_with, "expert"),
                ed_activity = stringr::str_detect(help_with, "Educational"),
                invite_elected = stringr::str_detect(help_with, "elected"),
                youth = stringr::str_detect(help_with, "youth"),
                food = stringr::str_detect(help_with, "food"),
                clean_up = stringr::str_detect(help_with, "clean-up"),
                test_equipment = stringr::str_detect(help_with, "equipment"))
```

It will be easier if we make separate variables for attendance on Sat and Sun, so we do that now.

```{r}
survey_resps <- survey_resps |>
  dplyr::mutate(
    attend_sat = stringr::str_detect(attend, "sat"),
    attend_sun = stringr::str_detect(attend, "sun")
  )
```

We make all the callsigns uppercase for consistency.

```{r}
survey_resps <- survey_resps |>
  dplyr::mutate(callsign = toupper(callsign))
```

Finally, we export the cleaned file.

```{r}
readr::write_csv(survey_resps, file.path("csv", paste0("clean_", params$survey_data_fn)))
```

### Visualizing

As of `{r} Sys.Date()`, we've had `{r} dim(survey_resps)[1]` responses.

#### Attending and operating

Here are the number of respondents who plan to attend and their plans to operate.

```{r}
xtabs(formula = ~ attend + operate, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, attend_sat) |>
  dplyr::filter(attend_sat == TRUE) |>
    knitr::kable(format = 'html')

survey_resps |>
  dplyr::select(callsign, attend_sun) |>
  dplyr::filter(attend_sun == TRUE) |>
    knitr::kable(format = 'html')
```

Here are respondents' plans to operate overnight:

```{r}
xtabs(formula = ~ overnight, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, overnight) |>
  dplyr::filter(overnight == 'yes') |>
    knitr::kable(format = 'html')

```

#### Modes

Here are respondents' interests by mode:

```{r}
xtabs(formula = ~ phone, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, phone) |>
  dplyr::filter(phone == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ cw, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, cw) |>
  dplyr::filter(cw == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ ft8, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, ft8) |>
  dplyr::filter(ft8 == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ varac, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, varac) |>
  dplyr::filter(varac == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ fldigi, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, fldigi) |>
  dplyr::filter(fldigi == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ js8call, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, js8call) |>
  dplyr::filter(js8call == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ sstv, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, sstv) |>
  dplyr::filter(sstv == TRUE) |>
    knitr::kable(format = 'html')
```

#### Volunteering

And here are respondents' interests in volunteering:

```{r}
xtabs(formula = ~ pr, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, pr) |>
  dplyr::filter(pr == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ info_table, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, info_table) |>
  dplyr::filter(info_table == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ satellite, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, satellite) |>
  dplyr::filter(satellite == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ mode_expert, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, mode_expert) |>
  dplyr::filter(mode_expert == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ ed_activity, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, ed_activity) |>
  dplyr::filter(ed_activity == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ invite_elected, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, invite_elected) |>
  dplyr::filter(invite_elected == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ youth, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, youth) |>
  dplyr::filter(youth == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ food, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, food) |>
  dplyr::filter(food == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ clean_up, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, clean_up) |>
  dplyr::filter(clean_up == TRUE) |>
    knitr::kable(format = 'html')
```

```{r}
xtabs(formula = ~ test_equipment, data = survey_resps)

survey_resps |>
  dplyr::select(callsign, test_equipment) |>
  dplyr::filter(test_equipment == TRUE) |>
    knitr::kable(format = 'html')
```

#### Comments

And here are the comments:

```{r}
survey_resps |>
  dplyr::select(callsign, comments) |>
  dplyr::filter(!is.na(comments)) |>
  knitr::kable(format = 'html')
```

